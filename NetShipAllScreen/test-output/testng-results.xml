<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="25" total="26" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-08T12:11:39 IST" name="NetShip" finished-at="2022-03-08T12:12:13 IST" duration-ms="33401">
    <groups>
    </groups>
    <test started-at="2022-03-08T12:11:39 IST" name="NetShipSmoke" finished-at="2022-03-08T12:12:13 IST" duration-ms="33401">
      <class name="NetShipPackage.NetShipAll">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:NetShipPackage.NetShipAll@6d4d66d2]" started-at="2022-03-08T12:11:37 IST" name="beforeMethod" finished-at="2022-03-08T12:11:39 IST" duration-ms="2784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="Login()[pri:0, instance:NetShipPackage.NetShipAll@6d4d66d2]" started-at="2022-03-08T12:11:39 IST" name="Login" finished-at="2022-03-08T12:12:09 IST" duration-ms="29803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="WatchList()[pri:0, instance:NetShipPackage.NetShipAll@6d4d66d2]" started-at="2022-03-08T12:12:09 IST" name="WatchList" finished-at="2022-03-08T12:12:09 IST" duration-ms="156" status="FAIL">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[D.\DataFiles\NetShipWatchListSTG.xlsx (The system cannot find the path specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: D.\DataFiles\NetShipWatchListSTG.xlsx (The system cannot find the path specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at NetShipPackage.NetShipAll.WatchList(NetShipAll.java:968)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WatchList -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:NetShipPackage.NetShipAll@6d4d66d2]" started-at="2022-03-08T12:12:09 IST" name="Logout" finished-at="2022-03-08T12:12:13 IST" duration-ms="3380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:NetShipPackage.NetShipAll@6d4d66d2]" started-at="2022-03-08T12:12:13 IST" name="afterMethod" finished-at="2022-03-08T12:12:15 IST" duration-ms="1828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- NetShipPackage.NetShipAll -->
    </test> <!-- NetShipSmoke -->
  </suite> <!-- NetShip -->
</testng-results>
